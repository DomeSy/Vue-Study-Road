Vue实例：
1>定义：每一个应用都是通过 Vue 这个构造函数创建的实例(root instance)启动，即 new Vue(选项对象)
2>传入的选项对象包含：
挂载元素、数据、模板、方法等
3>Vue实例自身属性和方法：
暴露自身的属性和方法，以$开头，如 $el, $data
4>el:
挂载元素选择器(控制所挂载的元素)
5>data:
a.代理数据(js 中的数据传送动 obj 中)
b.vue代理 data 数据：每个 Vue 实例都会代理其 data 对象里所有的属性，这些被代理的属性是响应的。
c.新添加的属性不具备响应功能，改变后不会更新视图
6>methods:
事件处理函数(所有的事件都写在methods中)
7>computed:
a.计算属性(模板是为了描述视图的结构，模板中放入太多的逻辑，导致模板过重且难以维护)，
b.计算一个属性时，Vue.js更新它的依赖列表，并缓存结果，只当其中一个依赖发生了变换，缓存的结果才无效
8>watch:
a.监控属性(浅监控和深监控)
b.浅监控：只能监控到 list (当前元素)，但不能监控到 list 里面的元素
如：list: function (){ }
c.深监控：都能监控
list:{
handler: function(){}
deep:true
}
1)handle：所执行的函数
2)deep：是否深度监控
9>template:
a.写入字符串
b.会将原有的html标签替换为str里面的东西，如替换原有的html文件
10>directives:
自定义行间样式，如"fouce",注用时以v-开头，即v-fouce
11>components：
a.局部注册
b. components {
组件名选项对象
}
